from .context import advent_of_code_2020
from advent_of_code_2020.day20 import *


def test_parse_tiles():
    input = """
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###
    """.strip()
    tiles = parse_tiles(input)
    assert tiles[0] == PlacedTile(
        2311,
        north=int("0011010010", 2),
        east=int("0001011001", 2),
        south=int("0011100111", 2),
        west=int("0111110010", 2),
        image="\n".join([
            "#..#....",
            "...##..#",
            "###.#...",
            "#.##.###",
            "#...#.##",
            "#.#.#..#",
            ".#....#.",
            "##...#.#",
        ]),
    )
    assert tiles[1] == PlacedTile(
        2311,
        north=int("0100101100", 2),
        east=int("0111110010", 2),
        south=int("1110011100", 2),
        west=int("0001011001", 2),
        image="\n".join([
            "....#..#",
            "#..##...",
            "...#.###",
            "###.##.#",
            "##.#...#",
            "#..#.#.#",
            ".#....#.",
            "#.#...##",
        ]),
    )
    assert tiles[2] == PlacedTile(
        2311,
        north=int("0100111110", 2),
        east=int("0011010010", 2),
        south=int("1001101000", 2),
        west=int("0011100111", 2),
        image="\n".join([
            "#.####.#",
            "##...#..",
            "..#.##..",
            "....#.##",
            "..##.##.",
            "#...#...",
            ".#.##...",
            "#.###.#.",
        ]),
    )
    assert len(tiles) == 8


def test_find_tiling():
    input = """
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...
    """.strip()

    tiles = parse_tiles(input)
    assert len(tiles) == 72
    assert int((len(tiles) // 8)**0.5) == 3
    zz = zigzag(3)
    izz = {p: i for i, p in enumerate(zz)}
    tiling = find_tiling(tiles, [], zz, izz)
    corners = [
        tiling[izz[(0,0)]],
        tiling[izz[(2,0)]],
        tiling[izz[(0,2)]],
        tiling[izz[(2,2)]],
    ]
    assert set([x.id for x in corners]) == set([1951, 2971, 3079, 1171])

    combined = """
.####...#####..#...###..
#####..#..#.#.####..#.#.
.#.#...#.###...#.##.##..
#.#.##.###.#.##.##.#####
..##.###.####..#.####.##
...#.#..##.##...#..#..##
#.##.#..#.#..#..##.#.#..
.###.##.....#...###.#...
#.####.#.#....##.#..#.#.
##...#..#....#..#...####
..#.##...###..#.#####..#
....#.##.#.#####....#...
..##.##.###.....#.##..#.
#...#...###..####....##.
.#.##...#.##.#.#.###...#
#.###.#..####...##..#...
#.###...#.##...#.######.
.###.###.#######..#####.
..##.#..#..#.#######.###
#.#..##.########..#..##.
#.#####..#.#...##..#....
#....##..#.#########..##
#...#.....#..##...###.##
#..###....##.#...##.##.#
    """.strip()
    assert combine_image([x.image for x in tiling], izz) in [
        combined,
        rotate_image_cw(combined),
        rotate_image_cw(rotate_image_cw(combined)),
        rotate_image_cw(rotate_image_cw(rotate_image_cw(combined))),
    ]
    dragon_points = find_dragons(combined)
    assert dragon_points == set([
        (20, 2),
        (2, 3),
        (7, 3),
        (8, 3),
        (13, 3),
        (14, 3),
        (19, 3),
        (20, 3),
        (21, 3),
        (3, 4),
        (6, 4),
        (9, 4),
        (12, 4),
        (15, 4),
        (18, 4),
        (19, 16),
        (1, 17),
        (6, 17),
        (7, 17),
        (12, 17),
        (13, 17),
        (18, 17),
        (19, 17),
        (20, 17),
        (2, 18),
        (5, 18),
        (8, 18),
        (11, 18),
        (14, 18),
        (17, 18),
    ])
    n_hash = len([x for x in combined if x == "#"])
    assert n_hash - len(dragon_points) == 273
