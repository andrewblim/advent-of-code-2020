from .context import advent_of_code_2020
from advent_of_code_2020.day20 import *


def test_parse_tiles():
    input = """
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###
    """.strip()
    tiles = parse_tiles(input)
    assert tiles[0] == PlacedTile(
        2311,
        north=int("0011010010", 2),
        east=int("0001011001", 2),
        south=int("0011100111", 2),
        west=int("0111110010", 2),
    )
    assert tiles[1] == PlacedTile(
        2311,
        north=int("0100101100", 2),
        east=int("0111110010", 2),
        south=int("1110011100", 2),
        west=int("0001011001", 2),
    )
    assert tiles[2] == PlacedTile(
        2311,
        north=int("0100111110", 2),
        east=int("0011010010", 2),
        south=int("1001101000", 2),
        west=int("0011100111", 2),
    )
    assert len(tiles) == 8


def test_find_tiling():
    input = """
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...
    """.strip()

    tiles = parse_tiles(input)
    assert len(tiles) == 72
    assert int((len(tiles) // 8)**0.5) == 3
    zz = zigzag(3)
    izz = {p: i for i, p in enumerate(zz)}
    tiling = find_tiling(tiles, [], zz, izz)
    corners = [
        tiling[izz[(0,0)]],
        tiling[izz[(2,0)]],
        tiling[izz[(0,2)]],
        tiling[izz[(2,2)]],
    ]
    assert set([x.id for x in corners]) == set([1951, 2971, 3079, 1171])
